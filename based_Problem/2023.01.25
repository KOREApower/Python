# 1.problem description
# 두 수의 차이를 반환하는 함수

# def cha (x,y):
#     if x > y :
#         return x-y
#     return y-x

# print (cha(30,50))
# print (cha(50,30))



# 2.problem description
# 두수의 곱을 반환하는 함수
# def mul (x,y):
#     return x*y

# print (mul(10,9))

# 3. problem description
# 둘 중 큰수를 반환하는 함수

# def 큰수 (x,y):
#     if x>y:
#         return x
#     return y

# print (큰수(30,50))
# print (큰수(50,30))


# 4. problem description
# 약수를 구해주는 함수

# def 약수 (x):
#     li = []
#     for i in range(1,x+1):
#         if x % i == 0 :
#            li.append(i)

#     return li

# print (약수(10)) 

# 5. problem description
# 팩토리얼을 반환하는 함수

# def fac(x):
#     su = 1
#     for i in range(1,x+1):
#         su *= i
#     return su

# print (fac(5))

# 6. problem description
# N을 입력받고 소수를 판단하는 프로그램

# 1.
# def 소수 (N):
#     su = 0
#     for i in range(1,N+1):
#         if N % i == 0:
#             su += 1
#     return su

# N = int(input("수입력:"))

# if 소수(N) == 2:
#     print("O")
# else:
#     print("X")

# 2.
# def 소수 (N):
#     for i in range(2,N):
#         if N % i == 0:
#             return True # 소수 x
#         return False # 소수 O

# N = int(input("수입력:"))
# if 소수(N):
#     print ("소수X")
# else :
#     print ("소수O") 

# 3. 
# def 소수 (N):
#     su =0
#     for i in range(1,N+1):
#         if N % i == 0:
#             su += 1

#     if su == 2:
#         print("소수O")
#     else :
#         print("소수X")

# N = int(input())

# 소수(N)





# 7. problem description

# 1. 홀수로만 이루어진 수의 개수를 반환하는 함수
# 2. 짝수를 발견하면 False 를 반환하는 함수

# li = [42601, 97354, 95664, 27647, 77388, 80286, 55198, 27488, 33949, 65332, 86368, 61160, 97370, 47797, 95164, 23189, 64916, 47436, 12451, 2472, 18034, 75092, 52923, 19574, 27849, 31853, 16405, 65380, 4439, 10255, 3065, 33879, 91123, 96478, 64233, 41063, 26252, 68446, 5132, 58811, 13388, 58766, 11279, 72780, 92459, 36591, 97568, 65977, 11908, 94284, 53672, 60392, 17257, 87127, 80125, 48629, 86802, 56072, 52143, 22503, 80723, 32932, 34581, 77505, 11221, 77440, 40707, 17876, 38456, 39112, 21612, 39179, 33182, 99631, 33108, 20682, 55126, 44463, 40894, 79236, 68789, 7305, 48336, 38251, 27196, 86375, 36807, 10598, 48565, 28774, 58980, 99743, 76460, 1070, 59672, 78725, 53562, 35784, 92498, 34987, 91622, 42213, 87461, 67505, 42437, 21803, 75828, 91077, 20913, 50546, 65201, 89858, 33680, 35816, 40945, 43290, 33603, 14350, 18445, 46245, 50548, 44079, 73526, 21870, 78823, 10096, 56251, 59829, 66252, 50524, 55187, 83529, 3225, 57468, 6824, 7439, 74514, 72929, 89914, 60571, 1915, 18581, 86524, 2195, 11972, 24799, 66957, 37683, 92743, 20225, 62446, 69044, 29235, 46317, 60238, 32900, 64659, 75750, 13254, 34154, 9233, 47694, 20063, 74431, 26163, 89864, 14349, 22613, 15445, 52832, 23017, 97850, 16931, 64195, 69381, 82435, 91792, 81143, 78486, 90333, 34978, 92116, 32735, 10450, 17357, 71565, 27517, 69024, 33971, 13955, 48120, 53703, 34705, 15025, 12791, 14669, 91181, 57193, 12879, 98403, 3566, 84616, 32179, 94118, 37281, 53742, 89706, 35445, 6491, 83083, 96152, 50662, 5058, 70478, 63193, 77201, 7565, 99068, 33730, 14349, 54602, 14476, 83928, 17044, 38936, 32301, 21260, 38318, 46383, 48373, 21027, 98100, 60030, 29394, 42825, 35154, 41630, 54153, 34948, 8317, 69206, 98394, 89394, 34560, 94130, 57207, 51662, 80719, 25626, 94622, 14555, 96578, 58591, 26042, 62572, 42351, 98617, 7957, 93619, 34998, 42286, 70483, 88693, 23690, 98171, 99044, 1838, 69163, 60282, 42181, 40230, 55940, 5727, 33612, 96379, 55242, 24872, 77079, 99743, 36723, 1579, 13088, 19862, 82568, 51326, 29394, 4596, 19039, 2618, 38310, 22910, 8672, 18869, 66429, 94559, 73327, 98223, 97904, 38475, 6394, 49773, 60424, 25983, 92674, 86999, 56366, 58181, 60276, 79564, 64719, 25989, 24788, 58207, 26756, 32125, 8843, 60203, 8841, 60600, 21886, 18267, 64195, 3895, 10934, 29827, 31653, 50840, 37024, 11387, 69499, 2089, 54738, 40665, 99463, 21447, 77848, 7967, 2682, 2694, 1068, 28290, 35180, 71021, 78294, 75357, 48041, 77126, 35348, 97119, 5712, 54759, 20329, 89365, 29261, 83389, 26422, 68630, 50073, 50994, 99418, 60104, 48103, 50030, 34043, 46817, 99322, 41736, 44206, 83948, 81209, 91199, 25072, 93343, 9319, 90111, 38406, 35329, 34709, 12312, 92951, 93209, 22585, 29524, 59797, 59910, 71182, 25995, 84492, 92655, 33682, 91650, 71253, 10107, 70200, 89202, 28104, 47550, 71090, 36337, 58727, 67448, 95144, 10301, 24561, 51011, 61962, 22559, 76404, 67991, 1628, 15080, 57739, 35311, 63508, 70849, 28651, 4059, 68439, 31738, 82088, 37000, 78094, 92134, 77836, 64499, 5709, 1603, 52193, 42390, 7184, 57702, 62276, 95809, 68060, 32560, 38657, 3047, 15357, 13990, 35611, 77204, 60841, 83421, 64526, 6182, 22449, 87795, 36096, 99001, 7567, 59954, 14366, 69124, 96421, 26654, 45331, 77022, 19193, 86861, 10738, 94411, 92557, 89778, 24062, 3188, 36508, 70847, 6579, 31309, 27955, 21182, 77626, 34326, 35348, 61180, 29281, 59991, 75197, 13172, 81186, 92155, 3398, 31687, 17085, 50187, 76317, 51285, 87934, 62931, 66615, 55291, 17412, 90697, 62721, 52937, 71503, 18879, 58952, 17946, 79205, 47374, 31861, 46241, 60978, 35741, 59987, 84514, 36534, 58668, 56914, 53179, 19165, 19310, 93830, 3872, 78333, 47130, 72602, 80458, 88239, 89887, 7787, 34040, 73402, 99931, 8258, 62343, 30207, 12533, 78256, 13024, 84838, 7365, 73968, 49748, 82670, 33727, 88891, 80134, 3299, 16051, 39692, 13167, 1037, 28493, 78429, 24826, 33034, 38172, 6672, 37949, 18642, 87263, 54628, 83629, 8093, 52272, 71395, 25325, 62001, 1649, 57439, 35023, 49060, 24258, 96969, 1859, 54507, 49771, 91091, 61006, 41492, 77584, 7693, 80837, 52263, 50786, 51241, 40467, 31688, 45471, 49589, 52211, 30115, 70004, 64632, 16929, 2495, 16483, 49226, 35526, 56929, 88170, 11548, 77626, 90636, 63902, 41963, 85752, 56321, 29670, 65058, 54192, 25514, 23253, 11157, 19834, 59063, 53134, 69485, 86040, 13756, 27145, 4428, 93105, 38398, 75607, 42566, 57602, 38903, 92351, 59244, 42188, 42470, 6918, 9270, 90716, 7679, 66353, 70875, 8453, 57014, 77003, 81383, 32965, 74530, 27713, 73716, 66722, 44725, 5061, 61469, 83870, 57153, 9422, 94925, 3308, 8562, 65462, 9704, 24904, 35821, 97439, 48568, 66786, 56684, 79954, 71035, 21102, 98204, 89679, 51145, 47242, 71460, 25568, 64661, 24443, 8035, 91719, 74510, 74190, 55281, 59735, 47474, 44355, 54718, 77876, 14366, 23235, 8643, 55453, 97731, 85235, 53438, 64078, 51733, 10633, 16755, 24323, 44330, 48826, 55391, 37817, 82264, 47398, 95000, 89155, 80706, 50373, 10962, 85903, 16209, 16213, 75240, 34301, 44148, 80679, 22171, 28526, 42455, 55082, 29877, 61322, 96393, 45597, 46940, 40201, 81074, 69837, 31619, 41897, 74839, 35674, 37414, 36122, 48478, 42987, 34018, 86629, 82185, 84988, 97258, 96059, 6511, 32910, 85791, 3810, 38610, 13401, 50564, 74796, 36548, 34148, 68836, 45749, 59078, 53242, 44440, 27922, 92925, 51811, 92170, 75358, 78578, 25148, 17527, 83594, 16160, 48519, 36320, 73965, 51396, 94776, 59732, 86991, 71416, 44780, 38369, 51947, 14378, 99521, 80212, 72292, 23137, 24121, 11654, 99177, 40299, 26533, 4422, 33515, 73687, 43916, 78203, 38040, 70450, 4462, 71404, 19097, 1893, 98659, 99157, 1702, 54103, 73606, 26330, 88872, 45521, 67326, 25498, 47088, 82980, 57469, 67145, 77311, 91166, 10802, 62121, 66259, 81325, 58183, 38548, 38880, 3762, 26040, 91463, 70643, 44267, 36474, 94872, 42394, 70890, 12719, 85610, 26034, 65028, 48954, 35523, 24279, 95343, 84816, 63832, 91783, 3732, 53490, 36196, 26798, 7172, 43579, 78492, 11773, 57332, 28874, 85656, 36200, 1151, 85631, 69315, 16824, 93395, 12124, 54393, 39057, 36935, 75218, 42461, 70413, 34780, 15752, 71702, 62704, 24511, 23450, 53796, 40079, 62489, 67383, 29277, 88430, 29589, 59080, 44859, 18012, 92226, 48655, 11533, 59736, 58207, 16066, 30696, 93169, 31997, 60679, 50641, 32179, 54703, 17405, 75597, 70733, 90160, 2142, 48862, 51893, 84719, 52885, 5208, 55334, 70123, 52040, 46028, 37847, 79387, 40999, 52332, 85459, 15629, 76124, 77708, 65497, 3284, 68963, 82719, 46663, 18271, 48284, 64135, 5494, 61059, 42059, 3500, 3004, 92457, 54425, 92486, 86255, 62869, 91818, 91226, 7348, 95507, 65293, 56727, 41861, 7495, 47038, 21762, 63019, 36501, 58128, 45754, 8683, 21071, 73637, 68167, 94837, 88127, 41050, 80453, 15945, 15205, 23921, 92759, 36208, 23255, 96122, 4713, 59402, 96789, 95814, 32207, 61720, 72335, 26830, 3655, 22743, 31343, 93560, 83272, 4650, 2726, 29411, 68179, 79504, 65756, 44542, 94313, 37465, 65525, 36198, 6433, 41367, 7909, 17646, 38857, 68765, 13251, 20887, 34225, 25094, 90794, 47122, 21251, 86928, 98545, 14088, 58081, 62395, 41591, 98882, 51965]

# def 홀개 (N):
#     su = 0
#     for i in str(N):
#         if int(i) % 2 == 1:
#             su += 1
    
#     return su

# for i in li :
#     if 홀개 (i) == len (str(i)) :
#         print (i)

# def 짝폴 (N):
#     for i in str(N):
#         if int(i) % 2 == 0 :
#             return False 
#         return True

# for i in li :
#     if 짝폴(i):
#         print(i)


# 8 .problem description
# 파일이름으로 사용할 수 없는 문자 제거해주는 함수
# 제거 ("/<>?*:") > k반환
# st = input("입력:")
# def 제거 (st):
#     for i in "\\\"/<>?*:""":
#         st = st.replace (i,"")
#     return st

# print(제거(st))

# 9. problem description
# 다이너마이트에서 단어당 등장한 빈도수를 출력해주세요.
# 1. set으로 풀기
# 2. dic으로 풀기

# st = """
#  cause i i i m in the stars tonight
# so watch me bring the fire and set the night alight
# shoes on  get up in the morn
# cup of milk  let s rock and roll
# king kong  kick the drum  rolling on like a rolling stone
# sing song when i m walking home
# jump up to the top  lebron
# ding dong  call me on my phone
# ice tea and a game of ping pong  huh
# this is getting heavy
# can you hear the bass boom  i m ready  woo hoo
# life is sweet as honey
# yeah  this beat cha ching like money  huh
# disco overload  i m into that  i m good to go
# i m diamond  you know i glow up
# hey  so let s go
#  cause i i i m in the stars tonight
# so watch me bring the fire and set the night alight  hey
# shining through the city with a little funk and soul
# so i ma light it up like dynamite  whoa oh oh
# bring a friend  join the crowd
# whoever wanna come along
# word up  talk the talk
# just move like we off the wall
# day or night  the sky s alight
# so we dance to the break of dawn
# ladies and gentlemen  i got the medicine
# so you should keep ya eyes on the ball  huh
# this is getting heavy
# can you hear the bass boom  i m ready  woo hoo
# life is sweet as honey
# yeah  this beat cha ching like money
# disco overload  i m into that  i m good to go
# i m diamond  you know i glow up
# let s go
#  cause i i i m in the stars tonight
# so watch me bring the fire and set the night alight  hey
# shining through the city with a little funk and soul
# so i ma light it up like dynamite  whoa oh oh
# dy na na na  na na  na na na  na na na  life is dynamite
# dy na na na  na na  na na na  na na na  life is dynamite
# shining through the city with a little funk and soul
# so i ma light it up like dynamite  whoa oh oh
# dy na na na  na na  na na  ayy
# dy na na na  na na  na na  ayy
# dy na na na  na na  na na  ayy
# light it up like dynamite
# dy na na na  na na  na na  ayy
# dy na na na  na na  na na  ayy
# dy na na na  na na  na na  ayy
# light it up like dynamite
#  cause i i i m in the stars tonight
# so watch me bring the fire and set the night alight
# shining through the city with a little funk and soul
# so i ma light it up like dynamite  this is ah
#  cause i i i m in the stars tonight
# so watch me bring the fire and set the night alight  alight  oh
# shining through the city with a little funk and soul
# so i ma light it up like dynamite  whoa  light it up like dynamite
# dy na na na  na na  na na na  na na na  life is dynamite
# dy na na na  na na  na na na  na na na  life is dynamite
# shining through the city with a little funk and soul
# so i ma light it up like dynamite  whoa oh oh"""

# # 1. 
# word = st.split()

# for i in set(word):
#     print(f"{i}의 등장 횟수는 {word.count(i)}")



# 2.
# word = st.split()
# d = {}
# for i in set(word):
#     d[i] = word.count (i)

# print (d)


